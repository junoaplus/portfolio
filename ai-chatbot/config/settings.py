"""
환경설정 및 전역 상수 관리
- 환경변수 로드
- API 엔드포인트 정의
- 완성된 페이지 목록 관리
"""

import os
from typing import List, Dict, Any
from dotenv import load_dotenv

# .env 파일 로드
load_dotenv()

class Config:
    # === 환경변수 ===
    OPENAI_API_KEY: str = os.getenv("OPENAI_API_KEY")
    PORTFOLIO_BASE_URL: str = os.getenv("PORTFOLIO_BASE_URL", "http://localhost:3000")
    
    # === 데이터 경로 설정 ===
    PROJECT_DATA_PATH: str = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "projects")
    PERSONAL_DATA_PATH: str = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "personal")
    
    # === API 설정 (About Me용으로 유지) ===
    PORTFOLIO_API_BASE_URL: str = f"{PORTFOLIO_BASE_URL}/api/portfolio" 
    REQUEST_TIMEOUT: int = 30
    MAX_RETRIES: int = 3
    
    # === OpenAI 설정 ===
    OPENAI_MODEL: str = "gpt-4o-mini"
    OPENAI_TEMPERATURE: float = 0.7
    OPENAI_MAX_TOKENS: int = 2000
    
    # === 완성된 페이지 목록 (동적 데이터 추출 가능) ===
    COMPLETE_PROJECTS: List[str] = [
        "boardgame-chatbot",    # 보드게임 챗봇 (상세페이지 완성)
        "date-recommendation",  # 데이트 코스 AI (상세페이지 완성)
        "newspaper-churn",      # 신문 이탈 예측 (상세페이지 완성) 
        "nurse-salary"          # 간호사 급여 예측 (상세페이지 완성)
    ]
    
    # === 완성된 LLM 스킬 목록 ===
    COMPLETE_LLM_SKILLS: List[str] = [
        "langchain",    # LangChain (상세페이지 완성)
        "rag",          # RAG (상세페이지 완성)
        "vector-db",    # Vector DB (상세페이지 완성)
        "openai",       # OpenAI (상세페이지 완성)
        "fine-tuning",  # Fine-tuning (상세페이지 완성)
        "postgresql"    # PostgreSQL (상세페이지 완성)
    ]
    
    @staticmethod
    def get_toss_job_context() -> str:
        """
        토스 ML Engineer 채용공고 완전한 컨텍스트 반환
        모든 GPT 요청 시 포함하여 토스 요구사항에 맞는 답변 생성
        """
        return """
📍 회사: 토스 (Toss)
📍 팀 특성: 다양한 사업부 및 팀에 속하여 토스의 다양한 문제를 머신러닝을 통해 빠르게 해결하고 자동화

🎯 팀의 역할:
- ML 기술을 통해 여러 비즈니스 도메인에서 발생하는 문제 해결
- ML 기반으로 공통화된 기술 제품들을 토스팀에 제공  
- 인터뷰를 통해 후보자의 강점과 경험을 고려한 도메인 및 과제에 배치

💼 주요 업무 영역 (6개):

1. 📋 General
   - 추천, 이상 탐지, 자연어 처리, AutoML 등 다양한 과제
   - 새로운 문제 유형을 탐색하고 실험

2. 🎯 추천 (Recommendation) 
   - 토스의 다양한 도메인(Ads, 커머스, Home 등)
   - 추천 시스템과 반응 예측 모델 개발
   - 사용자와 콘텐츠, 서비스, 광고 간의 연결 최적화

3. 📢 Ads (광고)
   - 다양한 광고 지면과 사용자 접점
   - 광고 퍼널 전반 최적화를 위한 예측 모델
   - 의사결정 로직 설계

4. 🔧 Platform  
   - 다양한 ML 요구사항을 안전하고 빠르게 실험 반복
   - 배포 플랫폼 및 Kubernetes 인프라 구축
   - ML 팀에 기술 제품 제공

5. 🔍 검색 (Search)
   - 실시간 대용량 데이터 처리
   - 검색 인프라 운영  
   - 검색 품질 개선
   - 검색 플랫폼 설계하고 운영
   - 고객 경험 개선

6. 🤖 AI ⭐⭐⭐ 
   - LLM, RAG, 멀티모달 등 다양한 AI 기술 활용
   - 문제를 정의하고 기술적으로 접근하는 방식 자체를 설계

✅ 자격 요건 (토스가 원하는 인재):
1. 머신러닝에 대한 깊이 있는 이해 + 다양한 비즈니스 문제 적용 경험
2. SQL 및 Hadoop, Spark 등 빅데이터 플랫폼 경험  
3. 모델 설계/개발 → 실제 서비스 적용 → 결과 분석 전 과정 경험
4. PyTorch, TensorFlow, XGBoost, LightGBM 등 주요 ML 라이브러리 실무 경험
5. 새로운 문제에 빠르게 몰입 + 필요 역량 스스로 학습하여 해결

📄 이력서 평가 기준:
- 머신러닝 알고리즘 직접 개발 + 운영 적용 경험 → 사용 기술과 그로 인한 변화 명시
- 팀 결과뿐 아니라 본인이 주도적으로 기여한 부분 구체적 명시  
- 경험이 적어도 → 문제 정의하고 해결한 과정이 잘 드러나면 좋은 인상

🔥 토스 ML Engineer의 핵심 철학:
"깊이 있는 기술적 구현을 통해 비즈니스 문제를 해결하는 역할"

토스만의 특별한 점:
- 모델링 그 이상을 한다
- 이전: "주어진 모델에 데이터 넣고 성능 평가"  
- 현재: "집계되지 않는 데이터를 어떻게 모델에 녹여낼지 고민"
- 금융 데이터 분석을 넘어서 → 유저 이해 바탕으로 슈퍼 앱 운영에 임팩트

🎯 채용 프로세스:
서류 접수 → 1차 직무 인터뷰(코딩) → 2차 직무 인터뷰 → 문화적합성 인터뷰 → 레퍼런스체크 → 처우 협의 → 최종 합격

=== 채용담당자 마인드셋 ===
당신은 토스 ML Engineer 채용담당자로서 다음을 중요시합니다:
  1. **기술적 깊이**: 문제 해결을 위한 창의적 기술 구현
  2. **구현 과정**: 어떻게 기술적 문제를 해결했는가
  3. **기술-비즈니스 연결**: 기술 구현이 어떻게 비즈니스 가치로 이어지는가
  4. LLM/RAG/멀티모달 AI 기술 활용 능력
  5. 문제 정의부터 해결까지 주도적 기여

평가 우선순위:
  1순위: 기술적 구현 방법과 창의성(숫자 보다는 al/ml 기술에 초점 백터 디비라든지 이런 기술)
  2순위: 그 기술이 만든 비즈니스 임팩트
  """

    @staticmethod
    def get_game_n_job_context() -> str:
        """Game N AI Engineer 채용공고 컨텍스트"""
        return """
📍 회사: Game N (게임엔)
📍 비전: 게임의 위대함을 실현하며 게임 개발자를 존중하는 기업
📍 목표: 앱스토어를 벗어나 언제 어디서든 플레이할 수 있는 게임 서비스

🎮 회사 특징:
- 2012년 국내 최초 HTML5 게임 개발
- 앱과 웹, PC와 모바일 어느 환경에도 구애받지 않는 게임
- 삼성전자, 페이스북 같은 글로벌 파트너와 협업
- 모든 구성원이 게이머인 기업
- 창의성과 자율성을 존중하는 문화

✅ AI Engineer 자격 요건:
1. AI 알고리즘 이해도
2. 한 가지 이상 개발 언어 능숙 사용
3. 데이터 기반 명확하고 원활한 소통 능력

🎯 Game N이 원하는 AI 활용:
- 게임 사용자 행동 분석 및 개인화
- 플레이어 맞춤 게임 추천
- 게임 내 AI 어시스턴트 구현
- 크로스 플랫폼 게임 데이터 분석

=== 채용담당자 마인드셋 ===
당신은 Game N AI Engineer 채용담당자로서 다음을 중요시합니다:
  1. **게임에 대한 이해**: 재미와 사용자 경험에 대한 깊은 이해
  2. **AI 기술 활용**: 게임 개선을 위한 AI 기술 적용 능력
  3. **사용자 중심 사고**: 플레이어 관점에서의 문제 해결
  4. **창의성과 자율성**: 새로운 아이디어와 능동적 업무 수행
  5. **크로스 플랫폼 이해**: 다양한 환경에서의 게임 개발 경험

평가 우선순위:
  1순위: AI를 통한 게임 사용자 경험 개선 아이디어와 구현 능력
  2순위: 게임과 AI 기술의 융합에 대한 이해도
  """

    @staticmethod
    def get_lbox_job_context() -> str:
        """엘박스 ML Engineer 채용공고 컨텍스트"""
        return """
📍 회사: 엘박스 (L-Box)
📍 포지션: Machine Learning Engineer (Product)
📍 비전: 법을 사람들에게 더 가깝고 의미 있게 만든다

🏆 회사 성과:
- 전체 변호사 60% 이상이 사용하는 판례검색 서비스 시장 점유율 1위
- 개업 변호사 절반 이상이 사용하는 '엘박스 AI'
- 시리즈 C 300억 투자 유치 (2025년)
- 국내 1위 리걸테크 기업

🎯 주요 업무:
1. 국내 최대 법률 데이터베이스 활용 혁신적 법률 AI 제품 개발
2. LLM 기반 시스템 설계·개발·배포 End-to-End 담당
3. 법률 AI 특화 검색 모델 개발 및 시스템 구조 최적화
4. RAG 성능, 답변 품질 등 핵심 지표 관리 및 재학습 시스템 설계
5. LLM Powered Autonomous Agents 컴포넌트 구성 및 개발

✅ 자격 요건:
- End-to-End ML 서비스 개발 3년 이상 경험
- 머신러닝 이론적 깊이 이해 + 실제 서비스 개발/운영
- ML 기반 서비스 프로덕션 배포/운영 경험
- LLM, RAG 시스템 설계~평가 직접 주도 경험
- AWS 등 클라우드 환경 서비스 개발/인프라 운영
- 백엔드 전반(API, DB, CI/CD) 이해

🎯 우대사항:
- PyTorch/TensorFlow로 최신 논문 직접 구현
- Online Learning 시스템 구축 경험
- 검색 및 대화 시스템 이해
- ML 파이프라인 설계 (k8s, Airflow)
- IR, Recommendation, RAG, LLM 최신 연구 팔로우

🎯 엘박스가 원하는 인재:
- LLM/RAG 시스템을 End-to-End로 구축하고 고도화
- 실제 서비스 운영하며 성능과 비용을 최적화
- 법률 도메인 특화 AI 시스템 설계
- 장기적 관점에서 시스템 스케일링 고민

=== 채용담당자 마인드셋 ===
당신은 엘박스 ML Engineer 채용담당자로서 다음을 중요시합니다:
  1. **LLM/RAG 전문성**: End-to-End 시스템 구축 및 운영 경험
  2. **실무 경험**: 프로덕션 환경에서 ML 서비스 운영 능력
  3. **성능 최적화**: RAG 성능, 응답속도, 비용 등 실질적 개선
  4. **도메인 특화**: 법률 AI에 특화된 시스템 설계 능력
  5. **장기적 사고**: 시스템 확장성과 지속가능성 고려

평가 우선순위:
  1순위: LLM/RAG 시스템 실제 구축 및 운영 경험
  2순위: ML 파이프라인 설계 및 성능 최적화 능력
  """

    @staticmethod
    def get_nuua_job_context() -> str:
        """누아 AI 에이전트 개발자 채용공고 컨텍스트"""
        return """
📍 회사: 누아 (NUUA)
📍 포지션: AI 에이전트 개발자 (신입)
📍 비전: AI와 IT를 기반으로 여행시장 혁신

🏆 회사 성과:
- 국내 최초, 전 세계 7번째 IATA 차세대 항공권 유통 최상위 기술 인증
- 과기정통부 AI 그랜드 챌린지 4차례 입상 (장관상 수상)
- 8년 연속 흑자, 4년 연속 42% 이상 성장
- 2024년 130억원 시리즈A 투자 유치

🎯 주요 업무:
1. 여행사 업무 자동화를 위한 AI 에이전트 설계 및 구현
2. 비정형 데이터 구조화를 통한 업무 자동화 툴 개발
3. 항공권 유통 솔루션 기반 지능형 에이전트 개발

✅ 자격 요건:
- 논리적 사고와 문제해결 능력
- 주어진 문제를 성실하고 꾸준하게 해결
- 4년제 대학교 졸업(예정)자

🎯 우대사항:
- Python, Java 등 프로그래밍 언어 이해
- 대규모 데이터 처리 및 분석 경험
- AI 및 머신러닝 관련 프로젝트 경험

💼 누아의 핵심 제품:
- 누아 오피스: 여행사 발권 업무 자동화 (취소/환불 자동 처리)
- 워짜이날: 방한 중화권 150만명 사용 한국 여행 앱
- 누아 메트로: 24개 도시 오프라인 지하철 검색

🎯 누아가 원하는 인재:
- AI 에이전트로 실질적 문제 해결에 관심
- 여행 산업의 본질적 문제 해결에 열정
- 꾸준함과 성실함으로 문제를 끝까지 해결

=== 채용담당자 마인드셋 ===
당신은 누아 AI 에이전트 개발자 채용담당자로서 다음을 중요시합니다:
  1. **문제 해결 능력**: 복잡한 문제를 논리적으로 해결하는 능력
  2. **AI 에이전트 이해**: 업무 자동화를 위한 AI 에이전트 설계 능력
  3. **비정형 데이터 처리**: 실제 비즈니스 데이터 구조화 경험
  4. **실용적 접근**: 기술로 실제 문제를 해결하려는 태도
  5. **꾸준함과 성실함**: 끝까지 문제를 해결하는 자세

평가 우선순위:
  1순위: AI 에이전트/자동화 시스템 구축 경험
  2순위: 비정형 데이터 처리 및 실무 문제 해결 능력
  """

    @staticmethod
    def get_ably_job_context() -> str:
        """에이블리 AI Engineer 채용공고 컨텍스트"""
        return """
📍 회사: 에이블리 (Ably)
📍 팀: 생성형 AI 기술을 활용한 비즈니스 과제 해결 스쿼드
📍 조직: 비즈니스 과제 중심의 목적 조직으로 필요한 모든 직군이 함께 협업

🎯 주요 업무:
1. 최신 AI 기술 동향 파악 → 실제 서비스 빠른 적용 전략 수립/실행
2. 에이블리 플랫폼 고도화용 AI 기반 기능 설계/개발
3. Virtual Try-On, AI 프로필 등 생성형 AI 서비스 백엔드 설계/개발/운영
4. 생성형 AI 모델 성능 최적화 및 컴퓨팅 리소스 문제 해결

✅ 필수 요구사항:
- 백엔드 시스템 설계, 구축, 운영 경험
- 클라우드 환경 서비스 배포/운영 경험  
- Diffusion, LLM 등 최신 생성형 AI 모델 서비스 통합 경험
- ML 모델 학습/서빙 프로세스, 비정형 데이터 처리 등 머신러닝 개념 이해

🎯 우대사항:
- Virtual Try-On 관련 기술 개발 또는 서비스 운영 경험
- Stable Diffusion 모델 직접 활용하여 실질적 성과 도출 경험

🛠️ 기술 스택:
- GenAI & Computer Vision: Stable Diffusion, LoRA, Image Processing
- 백엔드: Python, Django/FastAPI, REST API, Docker, Kubernetes  
- 딥러닝: PyTorch, ONNX
- 데이터: PySpark, Airflow
- 클라우드: AWS

🏢 에이블리 조직문화:
- One Team으로 Grit하게 일하며 Impact 창출
- 최신 생성형 AI 기술의 빠른 실제 적용
- 비즈니스 과제 중심의 실용적 AI 개발

=== 채용담당자 마인드셋 ===
당신은 에이블리 AI Engineer 채용담당자로서 다음을 중요시합니다:
  1. **생성형 AI 실무 경험**: Stable Diffusion, LLM 등을 실제 서비스에 적용한 경험
  2. **빠른 기술 적용**: 최신 AI 기술을 신속하게 비즈니스에 활용하는 능력
  3. **백엔드 역량**: AI 모델을 안정적인 서비스로 구현하는 엔지니어링 능력
  4. **비즈니스 이해**: 기술을 통한 실질적 비즈니스 임팩트 창출
  5. **팀워크**: One Team 문화에 맞는 협업 및 소통 능력

평가 우선순위:
  1순위: 생성형 AI(특히 Computer Vision/Image Processing) 실무 적용 경험
  2순위: AI 기술의 비즈니스 임팩트 창출 사례
  """

    @staticmethod
    def get_estsoft_job_context() -> str:
        """이스트소프트 LLM Engineer 채용공고 컨텍스트"""
        return """
📍 회사: 이스트소프트 (Est soft)
📍 직종: LLM Engineer (산업기능요원)
📍 분야: 실용주의 인공지능 개발
📍 서비스: 알툴즈, 알약, Perso SaaS, Alan AI

🎯 주요 업무:
1. LLM 모델을 활용한 이스트소프트 AI 서비스 연구 및 개발
2. OpenLLM 학습 및 최신 상용 LLM 모델 응용
3. 고퀄리티 자연어 답변 생성 시스템 구축
4. LLM 관련 선행 연구 및 프로토타입 개발
5. Pytorch, Triton, Docker, Azure 등 기술스택 활용

✅ 필수 요구사항:
- 산업기능요원 보충역 신입 자격요건 충족
- 문제해결을 즐기고 새로운 기술 학습에 적극적인 성향
- 동료들과 협업 가능하며 책임감 있는 인재

🌟 우대사항:
- LLM 모델 개발 및 파인튜닝 경험
- PyTorch, Azure 클라우드 활용 경험
- 자연어 처리 및 AI 서비스 프로토타입 구현 경험
- Docker 컨테이너 환경 개발 경험

당신은 이스트소프트 LLM Engineer 채용담당자로서 다음을 중요시합니다:
  1. **LLM 기술 역량**: 대규모 언어모델 개발 및 최적화 능력
  2. **실용주의 접근**: 기술을 실제 서비스에 적용하는 실용적 사고
  3. **프로토타입 개발**: 빠른 아이디어 검증 및 구현 능력
  4. **클라우드 환경**: Azure 등 클라우드 기반 AI 서비스 구축 경험
  5. **협업과 책임감**: 팀워크 중시 및 업무 완수 의지

평가 우선순위:
  1순위: LLM 모델 개발 및 자연어 처리 경험
  2순위: 실제 AI 서비스 프로토타입 구현 능력
  """

    @staticmethod
    def get_toss_cover_letter() -> str:
        """토스 자소서 데이터 반환 (7개 섹션으로 구성)"""
        return """
=== 토스 ML Engineer 자소서 ===

💡 지원동기:
임베디드 소프트웨어, IoT, 컴퓨터 네트워크, 데이터베이스, 객체지향 프로그래밍까지 다양한 수업을 들으며 공부할 때, 가장 큰 도움을 준 것이 GPT였습니다. AI가 미래의 핵심 기술이라 확신하고 본격적으로 공부했더니 저와 너무 잘 맞았고, 그동안 배운 모든 지식들과 시너지를 내며 더 큰 가치를 만들 수 있었습니다. 

특히 컴퓨터 네트워크에서 배운 TCP/IP 지식으로 LangChain의 스트리밍 응답을 최적화하고, IoT 수업의 MQTT 프로토콜 이해로 실시간 채팅 시스템을 구축하는 등, 모든 지식이 AI 개발에 활용되었습니다. 데이터를 기반으로 RAG 시스템을 구축하고, 에이전틱한 구조를 설계하며, 복잡한 데이터를 정제하는 과정이 정말 재미있었고, 제가 직접 만든 챗봇이 실제로 사용자의 질문에 답변하는 것을 볼 때의 보람은 이루 말할 수 없었습니다.

평소 토스를 자주 사용하면서 금융권에서 AI/ML이 정말 필요한 기업이라고 생각했습니다. 특히 2023년 8월 E-commerce 사업을 직접 운영하며 네이버와 쿠팡의 상품 노출 알고리즘을 분석했지만, 키워드 기반 시스템의 한계와 타겟팅의 제약을 경험했습니다. 이러한 경험을 통해 토스가 도전하고 있는 쇼핑 서비스에서도 키워드 매핑이 아닌 AI를 활용한 상품 검색 및 추천 서비스의 가능성을 보았고, 제가 경험한 LLM과 추천시스템 결합 프로젝트가 토스의 AI 업무영역과 완벽히 매칭된다고 생각하여 지원하게 되었습니다.

🛠️ 핵심기술:
1) LLM/RAG 전문성: OpenAI GPT, LangChain, FAISS, Qdrant, EXAONE 파인튜닝 등 최신 LLM 스택을 활용하여 실제 챗봇 시스템을 구축했습니다. 특히 벡터 DB 검색 최적화와 멀티 에이전트 아키텍처 설계에 자신 있습니다.
2) ML 모델링: XGBoost, LightGBM, RandomForest, SVM 등을 활용한 분류/회귀 모델 설계, GridSearchCV를 통한 하이퍼파라미터 튜닝, SMOTE+StratifiedKFold 조합으로 클래스 불균형 해결
3) 백엔드 개발: FastAPI, Django, PostgreSQL, Redis를 활용한 REST API 서버 구축 및 데이터베이스 설계
4) 데이터 엔지니어링: PySpark를 활용한 대용량 데이터 ETL 파이프라인 구축, Pandas/NumPy 기반 데이터 전처리 및 분석
5) 프론트엔드: Next.js, React를 활용한 웹 애플리케이션 개발, Streamlit을 통한 ML 데모 프로토타이핑

🎯 토스목표:
1년차: 팀에 녹아들고 토스의 업무 방법을 익히며 온보딩을 잘 학습하여 조직에 완전히 적응하기
2년차: 조직에 녹아든 내용을 바탕으로 나의 색을 입혀서 토스에서의 나만의 업무 방식 정립하기
3년차: 산업기능요원 기간 완료 후 토스의 정식 직원이 되어 더 큰 책임감을 갖고 업무에 임하기
4년차 이후: 토스에서 없으면 안 되는 핵심 인재가 되기 위해 나의 LLM/RAG 강점을 더 극대화하면서 토스에 실질적인 이익을 가져다주기

💪 차별화포인트:
첫째, LLM/RAG 분야에서의 확실한 강점입니다. 다른 지원자들과 차별화되는 점은 단순히 이론만 아는 것이 아니라 실제 서비스를 구축하고 운영해본 경험이 있다는 것입니다.

둘째, E-commerce 사업을 직접 운영한 경험입니다. 토스가 밀고 있는 쇼핑 사업에서 사장 관점과 고객 관점을 모두 이해하는 개발자는 드뭅니다. 네이버와 쿠팡의 상품 노출 알고리즘을 분석하고 키워드 기반 시스템의 한계를 직접 체감한 경험이 있어, 토스 쇼핑의 AI 기반 상품 검색 및 추천 서비스 개발에 차별화된 가치를 제공할 수 있습니다.

셋째, 'T자형 개발자'로서의 가치관입니다. AI/ML 한 분야에서 깊은 전문성을 갖추면서도 다른 분야를 폭넓게 이해하며, AI와의 협업 능력을 핵심 경쟁력으로 삼고 있습니다. 새로운 도전을 두려워하지 않으면서도 잘못된 방향임을 깨달으면 빠르게 전환할 수 있는 용기를 가지고 있습니다.

넷째, 문제 해결에 대한 체계적 접근입니다. 데이터 품질이 모델 성능의 90%를 좌우한다고 믿으며, 기술적 완벽함보다 고객 관점에서의 실용성을 중시합니다. 항상 최고가 되기 위해 최선을 다하는 자세로 토스에서 없으면 안 되는 핵심 인재가 되겠습니다.
"""

    @staticmethod
    def get_game_n_cover_letter() -> str:
        """Game N 자소서 데이터"""
        return """
=== Game N AI Engineer 자소서 ===

💡 지원동기:
게임을 통해 사람들에게 즐거움을 주는 것이 AI의 궁극적 목표라고 생각합니다. 제가 보드게임 추천 챗봇을 만들면서 가장 보람있었던 순간은 사용자가 '정말 재미있는 게임을 찾았다'고 할 때였습니다. Game N의 '어디서든 쉽게 플레이하는 게임' 철학이 제 AI 기술과 완벽히 매칭됩니다.

특히 Game N이 추구하는 창의성과 자율성은 제가 프로젝트를 진행하며 가장 중요하게 생각하는 가치관과 일치합니다. 보드게임 챗봇 프로젝트에서 팀을 리딩하며 217개 게임별 독립 벡터DB 아키텍처를 설계할 때, 기존 방식을 뛰어넘는 창의적 접근법으로 문제를 해결했습니다. 이런 경험이 Game N의 혁신적인 게임 개발 환경에서 큰 시너지를 낼 것이라 확신합니다.

🛠️ 핵심기술:
1) 개인화 추천 시스템: 217개 보드게임 추천 시스템 구축 경험으로 게임 플레이어 취향 분석 및 맞춤 추천 가능
2) 실시간 AI 최적화: 33초→3.4초 성능 향상 경험으로 게임 내 실시간 AI 응답 구현 가능  
3) 사용자 행동 데이터 분석: QA 데이터 자동 수집/학습 시스템으로 플레이어 패턴 분석 경험
4) 크로스 플랫폼 개발: Next.js, FastAPI 풀스택으로 웹/모바일 게임 환경 구현 가능
5) LLM/RAG 전문성: EXAONE 파인튜닝, 멀티 벡터DB 아키텍처로 게임 내 AI 어시스턴트 구현 가능

🎯 Game N 목표:
1년차: 게임 플레이어 행동 데이터 분석 및 개인화 추천 시스템 구축으로 사용자 경험 개선
2년차: 게임 내 AI 어시스턴트 개발로 플레이어가 더 쉽고 재미있게 게임을 즐길 수 있는 환경 조성
3년차: HTML5 게임과 AI 기술 융합으로 혁신적인 크로스 플랫폼 게임 경험 창조

💪 차별화포인트:
첫째, 게임과 AI의 만남에 대한 깊은 이해입니다. 단순히 기술만 아는 것이 아니라 '재미'라는 게임의 본질을 AI로 어떻게 극대화할지 고민해봤습니다. 보드게임 추천 시스템에서 사용자가 정말 즐거워하는 모습을 보며, AI가 게임 경험을 얼마나 풍부하게 만들 수 있는지 체감했습니다.

둘째, 사용자 중심의 AI 설계 철학입니다. 데이트 코스 추천 시스템에서 89,321개 장소 데이터를 처리하며 깨달은 것은 기술적 완성도보다 사용자가 진짜 원하는 것을 찾아주는 것이 더 중요하다는 점입니다. 이는 게임 플레이어가 정말 재미있어할 게임을 찾아주는 AI 개발에 직접 적용됩니다.

셋째, 창의적 문제 해결 능력입니다. 에이전트 시스템이 무한 루프에 빠졌을 때 룰베이스로 전환하거나, 벡터 검색 정확도가 떨어질 때 카테고리 기반 후보 축소를 도입하는 등 기존 방식에 얽매이지 않는 유연한 사고로 문제를 해결합니다.
"""

    @staticmethod
    def get_ably_cover_letter() -> str:
        """에이블리 자소서 데이터"""
        return """
=== 에이블리 AI Engineer 자소서 ===

💡 지원동기:
패션에 대한 관심이 많아서 2023년 8월부터 패션 이커머스 사업을 직접 운영해봤습니다. 네이버 스마트스토어와 쿠팡에서 의류 상품을 판매하며 패션 업계의 실무를 경험했고, 동시에 AI 기술에도 깊은 관심을 가지고 있어 다양한 AI 프로젝트를 진행해왔습니다.

패션과 AI, 두 분야 모두에 관심이 많은 저에게 에이블리는 정말 최적의 기업입니다. 실제 패션 이커머스 사업을 운영하며 느꼈던 고객의 니즈와 AI 기술로 이를 해결할 수 있는 가능성을 동시에 경험할 수 있기 때문입니다.

특히 데이트 코스 추천 프로젝트에서 20만개 장소 이미지 데이터를 벡터화하여 시각적 유사성 기반 검색을 구현했던 경험이 있습니다. 사용자가 선호하는 분위기와 스타일을 AI가 이해하도록 하는 과정에서 큰 보람을 느꼈고, 이러한 경험이 에이블리의 AI 기술 발전에 기여할 수 있다고 확신합니다.

🛠️ 핵심기술:
1) LLM/RAG 시스템: OpenAI GPT, LangChain, FAISS, Qdrant를 활용한 멀티 에이전트 시스템 구축
2) 백엔드 개발: FastAPI를 활용한 AI 모델 서빙 API 구축, PostgreSQL 데이터베이스 설계
3) 데이터 처리: PySpark를 활용한 대용량 데이터 ETL, 4개 API 20만개 데이터 → 9만개로 정제
4) 머신러닝: RandomForest, XGBoost 등을 활용한 분류/예측 모델링, 87% F1-Score 달성
5) 프론트엔드: Next.js, React를 활용한 웹 애플리케이션 개발 및 AI 서비스 연동

🎯 에이블리에서의 목표:
AI 에이전트를 활용하여 패션 쇼핑의 사용자 편리성을 극대화하고 싶습니다. 복잡한 상품 검색과 스타일링 고민을 AI가 자동으로 해결해주어, 고객들이 더 쉽고 즐겁게 패션을 경험할 수 있는 서비스를 만들고자 합니다.

특히 사용자의 취향과 체형, 상황에 맞는 맞춤형 추천 시스템을 구축하여 '이게 바로 내가 찾던 스타일!'이라는 경험을 제공하고 싶습니다. 제가 보드게임 추천에서 사용자 만족도를 높였던 것처럼, 패션 분야에서도 개인화된 AI 서비스로 고객 경험을 혁신하겠습니다.

💪 차별화포인트:
첫째, 생성형 AI 에이전트 시스템을 직접 구축한 경험입니다. LangGraph 멀티 에이전트 시스템과 RAG 파이프라인을 실제로 만들어 운영해봤기 때문에, 에이블리의 AI 서비스 개발에 즉시 기여할 수 있습니다.

둘째, 이커머스 사업을 직접 해본 경험이 있어 에이블리와 잘 어울립니다. 패션 상품 판매를 통해 고객의 구매 패턴과 니즈를 이해하고 있어, 기술적 관점뿐만 아니라 비즈니스 관점에서도 가치 있는 AI 서비스를 만들 수 있습니다.

셋째, 새로운 기술이 나오면 빠르게 학습하고 적용해보는 성향이 있어 에이블리의 빠른 기술 적용 문화에 최적화되어 있습니다. 최신 LLM 기술들을 프로젝트에 바로 도입해보며 실무에서 활용 가능성을 검증하는 능력을 보유하고 있습니다.
"""

    @staticmethod
    def get_nuua_cover_letter() -> str:
        """누아 자소서 데이터"""
        return """
=== 누아 AI 에이전트 개발자 자소서 ===

💡 지원동기:
자동화와 구조화, 그리고 솔루션 개발을 정말 좋아하고 잘한다고 생각합니다. AI 에이전트를 활용하여 멀티 에이전트 챗봇 시스템을 직접 구축해봤고, 비정형 데이터를 체계적으로 정리하는 작업들을 다양하게 도전해왔습니다.

특히 217개 보드게임의 복잡한 룰을 자동으로 설명해주는 시스템을 만들거나, 4개 API의 20만개 비정형 데이터를 9만개로 정제하는 등 반복적이고 복잡한 업무를 AI로 해결하는 것에 큰 보람을 느꼈습니다. 

누아가 여행사의 수작업 업무를 AI 에이전트로 자동화하는 것처럼, 저도 이런 자동화 솔루션을 만드는 것을 정말 좋아합니다. "당연해야 할 것들에 도전한다"는 누아의 철학이 제가 추구하는 방향과 완벽히 일치하여 이 회사에서 꼭 일해보고 싶습니다.

🛠️ 핵심기술:
1) AI 에이전트 설계: LangGraph 멀티 에이전트 시스템으로 5개 전문 에이전트가 협업하는 자동화 시스템 구축
2) 비정형 데이터 구조화: PySpark로 4개 API 20만개 데이터를 9만개로 정제, 카테고리 자동 분류 및 표준화
3) 업무 자동화: 217개 보드게임 룰 설명 자동화, 수작업을 AI 자동 응답으로 전환
4) 백엔드 개발: FastAPI를 활용한 REST API 구축, PostgreSQL 데이터베이스 설계
5) 머신러닝: RandomForest, XGBoost를 활용한 분류 모델링, 87% F1-Score 달성

🎯 누아에서의 목표:
AI 에이전트를 활용하여 여행사 업무의 자동화를 극대화하고 싶습니다. 복잡하고 반복적인 발권, 취소, 환불 업무를 AI가 처리하도록 하여 여행사 직원들이 더 가치 있는 고객 서비스에 집중할 수 있는 환경을 만들고자 합니다.

특히 비정형 항공권 데이터를 체계적으로 구조화하고, 각 항공사별 다른 규칙들을 AI가 자동으로 학습하여 처리할 수 있는 시스템을 구축하고 싶습니다. 제가 보드게임 룰 자동화에서 성과를 거둔 것처럼, 여행 업무에서도 '당연히 자동화되어야 할 것들'을 실현하겠습니다.

💪 차별화포인트:
첫째, 실제 AI 에이전트 시스템을 구축해본 경험이 있습니다. LangGraph로 멀티 에이전트 시스템을 만들어 Intent Router가 질문을 분석하고 적절한 전문 에이전트로 라우팅하는 구조를 직접 구현했습니다. 이는 누아의 업무 자동화 시스템과 동일한 아키텍처입니다.

둘째, 비정형 데이터 구조화를 잘합니다. 4개 API의 서로 다른 데이터 형식을 통합하고 표준화하는 작업을 해봤기 때문에, 각 항공사별로 다른 형식의 비정형 항공권 데이터를 처리하는 누아의 업무에 바로 적용할 수 있습니다.

셋째, 자동화 솔루션 개발을 좋아합니다. 217개 보드게임 룰 설명을 수작업에서 AI 자동 응답으로 전환한 경험처럼, 반복적인 업무를 찾아내고 이를 자동화하는 것에 큰 만족감을 느낍니다.

넷째, 이커머스 사업 경험으로 실무 문제를 이해합니다. 직접 온라인 쇼핑몰을 운영하며 반복 업무의 비효율성을 체감했기 때문에, 여행사가 겪는 실무 문제와 자동화 필요성을 깊이 이해할 수 있습니다.
"""

    @staticmethod
    def get_lbox_cover_letter() -> str:
        """엘박스 자소서 데이터"""
        return """
=== 엘박스 Machine Learning Engineer 자소서 ===

💡 지원동기:
RAG 시스템과 AI 에이전트 챗봇을 만드는 것을 정말 좋아하고 잘한다고 생각합니다. 특히 판례나 법률 같은 완벽하게 정리된 데이터를 다루는 것에 큰 매력을 느낍니다. 법률 데이터는 정말 잘 정리되어 있어서 이런 체계적인 정보들을 라우팅하고 검색하는 시스템을 구축하는 것이 너무 좋습니다.

보드게임 룰 챗봇을 만들 때도 217개 게임의 복잡한 룰들을 체계화하고 사용자 질문에 정확히 답변하는 시스템을 구축하며 큰 보람을 느꼈습니다. 특히 EXAONE 파인튜닝과 FAISS 벡터 검색으로 전문 지식을 정확하게 전달하는 과정이 정말 재미있었습니다.

엘박스의 법률 데이터는 보드게임 룰보다 훨씬 더 체계적이고 완성도 높은 데이터라고 생각합니다. 이런 완벽한 데이터로 RAG 시스템을 만들고, 사용자가 복잡한 법률 정보를 쉽게 찾을 수 있게 하는 일이 정말 하고 싶습니다.

🛠️ 핵심기술:
1) LLM/RAG 시스템: LangGraph를 활용한 멀티 에이전트 시스템, Intent Router + 전문 에이전트로 질문 분류 및 응답
2) 벡터 검색: Qdrant 벡터DB와 FAISS를 활용한 실시간 검색 시스템 구축
3) LLM 파인튜닝: EXAONE 모델 파인튜닝으로 도메인 특화 지식 학습 및 정확도 향상
4) 백엔드 개발: FastAPI를 활용한 REST API 구축, PostgreSQL 데이터베이스 설계
5) 머신러닝: RandomForest, XGBoost를 활용한 분류/예측 모델링, 87% F1-Score 달성

🎯 엘박스에서의 목표:
법률 RAG 시스템과 AI 에이전트를 통해 복잡한 법률 정보 검색을 혁신하고 싶습니다. 판례, 법령, 조문 등의 체계적인 법률 데이터를 최대한 활용하여 일반인도 쉽게 필요한 법률 정보를 찾을 수 있는 시스템을 만들고자 합니다.

특히 사용자의 질문 의도를 정확히 파악하고 가장 적절한 법률 정보를 신속하게 제공하는 시스템 구축에 집중하고 싶습니다. 제가 보드게임 룰에서 달성한 정확한 정보 전달을 법률 분야에서도 실현하여 국내 1위 리걸테크 기업의 기술력 향상에 기여하겠습니다.

💪 차별화포인트:
첫째, 전문 도메인 RAG 시스템을 실제로 구축해본 경험이 있습니다. 보드게임이라는 특수 도메인에서 217개 게임의 복잡한 룰과 예외사항들을 체계화하고 정확한 답변을 제공하는 시스템을 만들었습니다. 이 경험이 법률 도메인의 복잡성과 정확성 요구사항에 직접 활용될 수 있습니다.

둘째, 체계적인 데이터를 다루는 것을 정말 좋아합니다. 법률 데이터처럼 잘 정리된 정보를 분류하고 검색하는 시스템을 구축하는 일에 큰 흥미를 느끼며, 이런 완벽한 데이터로 더 나은 시스템을 만들 수 있다는 확신이 있습니다.

셋째, 멀티 에이전트 시스템 구축 경험이 있습니다. LangGraph로 Intent Router와 전문 에이전트들이 협업하는 구조를 직접 만들어봤기 때문에, 엘박스의 법률 AI 에이전트 시스템 개발에 즉시 기여할 수 있습니다.

넷째, 성능 최적화에 집중합니다. 33초에서 3.4초로 응답 속도를 개선한 경험처럼, 사용자가 법률 정보를 더 빠르고 정확하게 찾을 수 있도록 하는 최적화 작업을 잘할 수 있습니다.
"""

    @staticmethod
    def get_estsoft_cover_letter() -> str:
        """이스트소프트 자소서 데이터"""
        return """
=== 이스트소프트 LLM Engineer 자소서 ===

💡 지원동기:
LLM 모델 개발과 자연어 처리 시스템을 만드는 것을 정말 좋아합니다. 특히 실용적인 AI 서비스를 구축하여 사람들의 일상을 편리하게 만드는 일에 큰 보람을 느낍니다. 

보드게임 룰을 찾는 번거로움을 AI 챗봇으로 해결하고, 복잡한 데이트 코스 검색을 자동화하는 등 실생활의 불편함을 AI로 개선하는 프로젝트들을 진행해왔습니다. 이런 경험들이 이스트소프트의 "실용주의 인공지능으로 일상에 편리함을 더하다"는 철학과 완벽히 일치합니다.

특히 EXAONE 모델을 직접 파인튜닝해보고 OpenLLM을 활용한 경험이 있어, 이스트소프트의 Perso SaaS와 Alan AI 같은 LLM 서비스 개발에 바로 기여할 수 있습니다. 30년간 국민 유틸리티를 만들어온 이스트소프트에서 이제 AI 분야의 혁신을 함께 만들어가고 싶습니다.

🛠️ 핵심기술:
1) LLM 모델 개발: EXAONE 파인튜닝 경험, LangChain을 활용한 멀티 에이전트 시스템 구축
2) 자연어 처리: FAISS와 Qdrant 벡터 검색, 질문 의도 분류 및 응답 생성 파이프라인
3) 백엔드 개발: FastAPI를 활용한 AI 모델 서빙 API 구축, PostgreSQL 데이터베이스 설계
4) 프론트엔드: Next.js와 React를 활용한 AI 서비스 웹 애플리케이션 개발
5) 성능 최적화: 응답 속도 33초 → 3.4초 개선, 실시간 검색 시스템 구현

🎯 이스트소프트에서의 목표:
LLM 기술을 활용하여 일상생활을 더욱 편리하게 만드는 실용적인 AI 서비스를 개발하고 싶습니다. 복잡한 자연어 질문을 이해하고 정확한 답변을 제공하는 고품질 LLM 시스템을 구축하여, 사용자들이 정보를 더 쉽고 빠르게 얻을 수 있도록 하고자 합니다.

특히 Perso SaaS와 Alan AI 같은 서비스에서 사용자 경험을 혁신적으로 개선하고 싶습니다. 제가 보드게임 챗봇에서 달성한 것처럼 복잡한 정보를 사용자 친화적으로 전달하는 LLM 서비스를 만들어, 이스트소프트의 AI 기술 발전에 기여하겠습니다.

💪 차별화포인트:
첫째, 실제 LLM 파인튜닝 경험이 있습니다. EXAONE 모델을 직접 파인튜닝해서 보드게임 전문 지식을 학습시키고, 217개 게임 룰에 대한 정확한 답변을 생성하는 시스템을 구축했습니다. 이는 이스트소프트의 OpenLLM 학습과 상용 LLM 모델 응용에 직접 활용할 수 있는 경험입니다.

둘째, 실용적인 AI 서비스 개발을 좋아합니다. 기술적 완성도보다 실제 사용자의 불편함을 해결하는 것에 집중하여, 보드게임 룰 검색의 번거로움을 AI로 자동화하고 복잡한 데이트 코스 추천을 간단하게 만드는 등 실생활 편의성 개선에 경험이 있습니다.

셋째, 자연어 처리 시스템 구축 경험이 풍부합니다. 질문 의도 분류부터 적절한 응답 생성까지 전체 NLP 파이프라인을 직접 구현해봤기 때문에, 고퀄리티 자연어 답변 생성 시스템 개발에 바로 기여할 수 있습니다.

넷째, 빠른 프로토타입 개발이 가능합니다. 아이디어부터 실제 서비스까지 풀스택으로 개발할 수 있어 LLM 관련 선행 연구나 프로토타입을 신속하게 구현할 수 있습니다.
"""

    @staticmethod
    def get_cover_letter_data(company: str) -> str:
        """회사별 자소서 데이터 반환"""
        if company == "toss":
            return Config.get_toss_cover_letter()
        elif company == "game_n":
            return Config.get_game_n_cover_letter()
        elif company == "ably":
            return Config.get_ably_cover_letter()
        elif company == "nuua":
            return Config.get_nuua_cover_letter()
        elif company == "lbox":
            return Config.get_lbox_cover_letter()
        elif company == "estsoft":
            return Config.get_estsoft_cover_letter()
        elif company == "kakao":
            return """=== 카카오 자소서 데이터 (추후 추가) ==="""
        elif company == "naver":
            return """=== 네이버 자소서 데이터 (추후 추가) ==="""
        else:
            return """=== 일반 자소서 데이터 ===
기술적 도전을 통한 문제 해결과 지속적 학습을 추구합니다."""

    @staticmethod  
    def get_company_context(company: str) -> str:
        """회사별 채용 컨텍스트 반환"""
        if company == "toss":
            return Config.get_toss_job_context()
        elif company == "game_n":
            return Config.get_game_n_job_context()
        elif company == "ably":
            return Config.get_ably_job_context()
        elif company == "nuua":
            return Config.get_nuua_job_context()
        elif company == "lbox":
            return Config.get_lbox_job_context()
        elif company == "estsoft":
            return Config.get_estsoft_job_context()
        else:
            return """=== 일반 AI/ML 엔지니어 채용 상황 ===
기술적 역량과 문제 해결 능력을 종합적으로 평가하는 일반적인 면접 상황입니다.
다양한 프로젝트 경험과 기술 스택을 균형있게 어필하는 것이 중요합니다."""

    @classmethod
    def validate_config(cls):
        """설정 유효성 검사"""
        if not cls.OPENAI_API_KEY:
            raise ValueError("OPENAI_API_KEY가 설정되지 않았습니다")
        if not cls.PORTFOLIO_BASE_URL:
            raise ValueError("PORTFOLIO_BASE_URL이 설정되지 않았습니다")